{"remainingRequest":"D:\\_codes\\MyProjects\\vuetestbs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\_codes\\MyProjects\\vuetestbs\\src\\components\\Draw.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\_codes\\MyProjects\\vuetestbs\\src\\components\\Draw.vue","mtime":1611985416431},{"path":"D:\\_codes\\MyProjects\\vuetestbs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\_codes\\MyProjects\\vuetestbs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\_codes\\MyProjects\\vuetestbs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\_codes\\MyProjects\\vuetestbs\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Draw.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Draw.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"maintenancePlanAdd\">\r\n    <div class=\"child-panel-title\">\r\n      <h2>图形标注</h2>\r\n    </div>\r\n    <div class=\"panel-body\">\r\n      <div class=\"demo\">\r\n        <canvas id=\"canvas\" :width=\"width\" :height=\"height\"></canvas>\r\n        <div class=\"draw-btn-group\">\r\n          <div :class=\"{active:drawType==''}\" title=\"自由选择\" @click=\"drawTypeChange('')\">\r\n            <i class=\"draw-icon icon-mouse\"></i>\r\n          </div>\r\n          <div :class=\"{active:drawType=='arrow'}\" title=\"画箭头\" @click=\"drawTypeChange('arrow')\">\r\n            <i class=\"draw-icon icon-1\"></i>\r\n          </div>\r\n          <div :class=\"{active:drawType=='text'}\" title=\"文本输入框\" @click=\"drawTypeChange('text')\">\r\n            <i class=\"draw-icon icon-2\"></i>\r\n          </div>\r\n          <div :class=\"{active:drawType=='ellipse'}\" title=\"画圆\" @click=\"drawTypeChange('ellipse')\">\r\n            <i class=\"draw-icon icon-3\"></i>\r\n          </div>\r\n          <div :class=\"{active:drawType=='rectangle'}\" title=\"画矩形\" @click=\"drawTypeChange('rectangle')\">\r\n            <i class=\"draw-icon icon-4\"></i>\r\n          </div>\r\n          <div :class=\"{active:drawType=='polygon'}\" title=\"画多边形\" @click=\"drawPolygon\">\r\n            <i class=\"draw-icon icon-6\"></i>\r\n          </div>\r\n          <div :class=\"{active:drawType=='pen'}\" title=\"笔画\" @click=\"drawTypeChange('pen')\">\r\n            <i class=\"draw-icon icon-7\"></i>\r\n          </div>\r\n          <div :class=\"{active:drawType=='pentagram'}\" title=\"五角星\" @click=\"drawTypeChange('pentagram')\">\r\n            <i class=\"draw-icon icon-pentagram\"></i>\r\n          </div>\r\n          <div @click=\"uploadImg\" title=\"从文件选择图片上传\">\r\n            <i class=\"draw-icon icon-img\"></i>\r\n          </div>\r\n          <div @click=\"loadExpImg\" title=\"加载背景图\">\r\n            <i class=\"draw-icon icon-back\"></i>\r\n          </div>\r\n          <div @click=\"save\" title=\"保存\">\r\n            <i class=\"draw-icon icon-save\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <input type=\"file\" @change=\"uploadImgChange\" id=\"imgInput\" accept=\"image/*\" />\r\n    <img id=\"img\" :src=\"imgSrc\" />\r\n    <img id=\"expImg\" src=\"../assets/icons/draw/exp.jpg\" />\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"Draw\",\r\n  data() {\r\n    return {\r\n      width: 1280,\r\n      height: 620,\r\n      rect: [],\r\n      canvas: {},\r\n      showMenu: false,\r\n      x: \"\",\r\n      y: \"\",\r\n      mouseFrom: {},\r\n      mouseTo: {},\r\n      drawType: null,  //当前绘制图像的种类\r\n      canvasObjectIndex: 0,\r\n      textbox: null,\r\n      rectangleLabel: \"warning\",\r\n      drawWidth: 2, //笔触宽度\r\n      color: \"#E34F51\", //画笔颜色\r\n      drawingObject: null, //当前绘制对象\r\n      moveCount: 1, //绘制移动计数器\r\n      doDrawing: false, // 绘制状态\r\n      //polygon 相关参数\r\n      polygonMode: false,\r\n      pointArray: [],\r\n      lineArray: [],\r\n      activeShape: false,\r\n      activeLine: \"\",\r\n      line: {},\r\n      delectKlass: {},\r\n      imgFile: {},\r\n      imgSrc: \"\",\r\n    };\r\n  },\r\n  watch: {\r\n    drawType() {\r\n      this.canvas.selection = !this.drawType;\r\n    },\r\n    width() {\r\n      this.canvas.setWidth(this.width)\r\n    },\r\n    height() {\r\n      this.canvas.setHeight(this.height)\r\n    },\r\n  },\r\n  methods: {\r\n    // 保存当前画布为png图片\r\n    save() {\r\n      var canvas = document.getElementById('canvas')\r\n      var imgData = canvas.toDataURL('png');\r\n      imgData = imgData.replace('image/png', 'image/octet-stream');\r\n      // 下载后的问题名，可自由指定\r\n      var filename = 'drawingboard_' + (new Date()).getTime() + '.' + 'png';\r\n      this.saveFile(imgData, filename);\r\n    },\r\n    saveFile(data, filename) {\r\n      var save_link = document.createElement('a');\r\n      save_link.href = data;\r\n      save_link.download = filename;\r\n      var event = document.createEvent('MouseEvents');\r\n      event.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n      save_link.dispatchEvent(event);\r\n    },\r\n    uploadImg() {\r\n      document.getElementById(\"imgInput\").click();\r\n    },\r\n    // 从已渲染的DOM元素加载图片至canvas\r\n    loadExpImg() {\r\n      var imgElement = document.getElementById(\"expImg\"); //声明我们的图片\r\n      var imgInstance = new fabric.Image(imgElement, {\r\n        selectable: false\r\n        // zIndex:-99,\r\n      });\r\n      this.canvas.add(imgInstance);\r\n    },\r\n    // 从文件加载图片至canvas\r\n    uploadImgChange() {\r\n      // 获取文件\r\n      var eleImportInput = document.getElementById(\"imgInput\");\r\n      this.imgFile = eleImportInput.files[0];\r\n      var imgSrc = \"\",\r\n          imgTitle = \"\";\r\n      // 从reader中获取选择文件的src\r\n      if (/\\.(jpe?g|png|gif)$/i.test(this.imgFile.name)) {\r\n        var reader = new FileReader();\r\n        var _this = this;\r\n        reader.addEventListener(\r\n            \"load\",\r\n            function () {\r\n              imgTitle = _this.imgFile.name;\r\n              _this.imgSrc = this.result;\r\n            },\r\n            false\r\n        );\r\n        reader.readAsDataURL(this.imgFile);\r\n      }\r\n      var imgElement = document.getElementById(\"img\"); //声明我们的图片\r\n      imgElement.onload = () => {\r\n        this.width = imgElement.width\r\n        this.height = imgElement.height\r\n        var imgInstance = new fabric.Image(imgElement, {\r\n          zIndex: -1,\r\n          selectable: false\r\n        });\r\n        this.canvas.add(imgInstance);\r\n      };\r\n    },\r\n    // 开始绘制时，指定绘画种类\r\n    drawTypeChange(e) {\r\n      this.drawType = e;\r\n      this.canvas.skipTargetFind = !!e\r\n      if (e == \"pen\") {\r\n        // isDrawingMode为true 才可以自由绘画\r\n        this.canvas.isDrawingMode = true;\r\n      } else {\r\n        this.canvas.isDrawingMode = false;\r\n      }\r\n    },\r\n    // 鼠标按下时触发\r\n    mousedown(e) {\r\n      // 记录鼠标按下时的坐标\r\n      var xy = e.pointer || this.transformMouse(e.e.offsetX, e.e.offsetY);\r\n      this.mouseFrom.x = xy.x;\r\n      this.mouseFrom.y = xy.y;\r\n      this.doDrawing = true;\r\n      if (this.drawType == \"text\") {\r\n        this.drawing();\r\n      }\r\n      if (this.textbox) {\r\n        this.textbox.enterEditing();\r\n        this.textbox.hiddenTextarea.focus();\r\n      }\r\n      // 绘制多边形\r\n      if (this.drawType == \"polygon\") {\r\n        this.canvas.skipTargetFind = false;\r\n        try {\r\n          // 此段为判断是否闭合多边形，点击红点时闭合多边形\r\n          if (this.pointArray.length > 1) {\r\n            // e.target.id == this.pointArray[0].id 表示点击了初始红点\r\n            if (e.target && e.target.id == this.pointArray[0].id) {\r\n              this.generatePolygon();\r\n            }\r\n          }\r\n          //未点击红点则继续作画\r\n          if (this.polygonMode) {\r\n            this.addPoint(e);\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    },\r\n    // 鼠标松开执行\r\n    mouseup(e) {\r\n      var xy = e.pointer || this.transformMouse(e.e.offsetX, e.e.offsetY);\r\n      this.mouseTo.x = xy.x;\r\n      this.mouseTo.y = xy.y;\r\n      this.drawingObject = null;\r\n      this.moveCount = 1;\r\n      if (this.drawType != \"polygon\") {\r\n        this.doDrawing = false;\r\n      }\r\n    },\r\n    //鼠标移动过程中已经完成了绘制\r\n    mousemove(e) {\r\n      if (this.moveCount % 2 && !this.doDrawing) {\r\n        //减少绘制频率\r\n        return;\r\n      }\r\n      this.moveCount++;\r\n      var xy = e.pointer || this.transformMouse(e.e.offsetX, e.e.offsetY);\r\n      this.mouseTo.x = xy.x;\r\n      this.mouseTo.y = xy.y;\r\n      // 多边形与文字框特殊处理\r\n      if (this.drawType != \"text\" || this.drawType != \"polygon\") {\r\n        this.drawing(e);\r\n      }\r\n      if (this.drawType == \"polygon\") {\r\n        if (this.activeLine && this.activeLine.class == \"line\") {\r\n          var pointer = this.canvas.getPointer(e.e);\r\n          this.activeLine.set({ x2: pointer.x, y2: pointer.y });\r\n          var points = this.activeShape.get(\"points\");\r\n          points[this.pointArray.length] = {\r\n            x: pointer.x,\r\n            y: pointer.y,\r\n            zIndex: 1\r\n          };\r\n          this.activeShape.set({\r\n            points: points\r\n          });\r\n          this.canvas.renderAll();\r\n        }\r\n        this.canvas.renderAll();\r\n      }\r\n    },\r\n    deleteObj() {\r\n      this.canvas.getActiveObjects().map(item => {\r\n        this.canvas.remove(item);\r\n      });\r\n    },\r\n    transformMouse(mouseX, mouseY) {\r\n      return { x: mouseX / 1, y: mouseY / 1 };\r\n    },\r\n    // 绘制多边形开始，绘制多边形和其他图形不一样，需要单独处理\r\n    drawPolygon() {\r\n      this.drawType = \"polygon\";\r\n      this.polygonMode = true;\r\n      //这里画的多边形，由顶点与线组成\r\n      this.pointArray = new Array();  // 顶点集合\r\n      this.lineArray = new Array();  //线集合\r\n      this.canvas.isDrawingMode = false;\r\n    },\r\n    addPoint(e) {\r\n      var random = Math.floor(Math.random() * 10000);\r\n      var id = new Date().getTime() + random;\r\n      var circle = new fabric.Circle({\r\n        radius: 5,\r\n        fill: \"#ffffff\",\r\n        stroke: \"#333333\",\r\n        strokeWidth: 0.5,\r\n        left: (e.pointer.x || e.e.layerX) / this.canvas.getZoom(),\r\n        top: (e.pointer.y || e.e.layerY) / this.canvas.getZoom(),\r\n        selectable: false,\r\n        hasBorders: false,\r\n        hasControls: false,\r\n        originX: \"center\",\r\n        originY: \"center\",\r\n        id: id,\r\n        objectCaching: false\r\n      });\r\n      if (this.pointArray.length == 0) {\r\n        circle.set({\r\n          fill: \"red\"\r\n        });\r\n      }\r\n      var points = [\r\n        (e.pointer.x || e.e.layerX) / this.canvas.getZoom(),\r\n        (e.pointer.y || e.e.layerY) / this.canvas.getZoom(),\r\n        (e.pointer.x || e.e.layerX) / this.canvas.getZoom(),\r\n        (e.pointer.y || e.e.layerY) / this.canvas.getZoom()\r\n      ];\r\n      this.line = new fabric.Line(points, {\r\n        strokeWidth: 2,\r\n        fill: \"#999999\",\r\n        stroke: \"#999999\",\r\n        class: \"line\",\r\n        originX: \"center\",\r\n        originY: \"center\",\r\n        selectable: false,\r\n        hasBorders: false,\r\n        hasControls: false,\r\n        evented: false,\r\n        objectCaching: false\r\n      });\r\n      if (this.activeShape) {\r\n        var pos = this.canvas.getPointer(e.e);\r\n        var points = this.activeShape.get(\"points\");\r\n        points.push({\r\n          x: pos.x,\r\n          y: pos.y\r\n        });\r\n        var polygon = new fabric.Polygon(points, {\r\n          stroke: \"#333333\",\r\n          strokeWidth: 1,\r\n          fill: \"#cccccc\",\r\n          opacity: 0.3,\r\n          selectable: false,\r\n          hasBorders: false,\r\n          hasControls: false,\r\n          evented: false,\r\n          objectCaching: false\r\n        });\r\n        this.canvas.remove(this.activeShape);\r\n        this.canvas.add(polygon);\r\n        this.activeShape = polygon;\r\n        this.canvas.renderAll();\r\n      } else {\r\n        var polyPoint = [\r\n          {\r\n            x: (e.pointer.x || e.e.layerX) / this.canvas.getZoom(),\r\n            y: (e.pointer.y || e.e.layerY) / this.canvas.getZoom()\r\n          }\r\n        ];\r\n        var polygon = new fabric.Polygon(polyPoint, {\r\n          stroke: \"#333333\",\r\n          strokeWidth: 1,\r\n          fill: \"#cccccc\",\r\n          opacity: 0.3,\r\n          selectable: false,\r\n          hasBorders: false,\r\n          hasControls: false,\r\n          evented: false,\r\n          objectCaching: false\r\n        });\r\n        this.activeShape = polygon;\r\n        this.canvas.add(polygon);\r\n      }\r\n      this.activeLine = this.line;\r\n      this.pointArray.push(circle);\r\n      this.lineArray.push(this.line);\r\n      this.canvas.add(this.line);\r\n      this.canvas.add(circle);\r\n    },\r\n    generatePolygon() {\r\n      var points = new Array();\r\n      this.pointArray.map((point, index) => {\r\n        points.push({\r\n          x: point.left,\r\n          y: point.top\r\n        });\r\n        this.canvas.remove(point);\r\n      });\r\n      this.lineArray.map((line, index) => {\r\n        this.canvas.remove(line);\r\n      });\r\n      this.canvas.remove(this.activeShape).remove(this.activeLine);\r\n      var polygon = new fabric.Polygon(points, {\r\n        stroke: this.color,\r\n        strokeWidth: this.drawWidth,\r\n        fill: \"rgba(255, 255, 255, 0)\",\r\n        opacity: 1,\r\n        hasBorders: true,\r\n        hasControls: false\r\n      });\r\n      this.canvas.add(polygon);\r\n      this.activeLine = null;\r\n      this.activeShape = null;\r\n      this.polygonMode = false;\r\n      this.doDrawing = false;\r\n      this.drawType = null;\r\n    },\r\n    drawing(e) {\r\n      if (this.drawingObject) {\r\n        this.canvas.remove(this.drawingObject);\r\n      }\r\n      var canvasObject = null;\r\n      var left = this.mouseFrom.x,\r\n          top = this.mouseFrom.y,\r\n          mouseFrom = this.mouseFrom,\r\n          mouseTo = this.mouseTo;\r\n      switch (this.drawType) {\r\n        case \"arrow\": //箭头\r\n          var x1 = mouseFrom.x,\r\n              x2 = mouseTo.x,\r\n              y1 = mouseFrom.y,\r\n              y2 = mouseTo.y;\r\n          var w = x2 - x1,\r\n              h = y2 - y1,\r\n              sh = Math.cos(Math.PI / 4) * 16;\r\n          var sin = h / Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\r\n          var cos = w / Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\r\n          var w1 = (16 * sin) / 4,\r\n              h1 = (16 * cos) / 4,\r\n              centerx = sh * cos,\r\n              centery = sh * sin;\r\n          /**\r\n           * centerx,centery 表示起始点，终点连线与箭头尖端等边三角形交点相对x，y\r\n           * w1 ，h1用于确定四个点\r\n           */\r\n          var path = \" M \" + x1 + \" \" + y1;\r\n          path += \" L \" + (x2 - centerx + w1) + \" \" + (y2 - centery - h1);\r\n          path +=\r\n              \" L \" + (x2 - centerx + w1 * 2) + \" \" + (y2 - centery - h1 * 2);\r\n          path += \" L \" + x2 + \" \" + y2;\r\n          path +=\r\n              \" L \" + (x2 - centerx - w1 * 2) + \" \" + (y2 - centery + h1 * 2);\r\n          path += \" L \" + (x2 - centerx - w1) + \" \" + (y2 - centery + h1);\r\n          path += \" Z\";\r\n          canvasObject = new fabric.Path(path, {\r\n            stroke: this.color,\r\n            fill: this.color,\r\n            strokeWidth: this.drawWidth\r\n          });\r\n          break;\r\n        case \"pentagram\": //五角星\r\n          var x1 = mouseFrom.x,\r\n              x2 = mouseTo.x,\r\n              y1 = mouseFrom.y,\r\n              y2 = mouseTo.y;\r\n          /**\r\n           * 实现思路  (x1,y1)表示鼠标起始的位置 (x2,y2)表示鼠标抬起的位置\r\n           * r 表示五边形外圈圆的半径，这里建议自己画个图理解\r\n           * 正五边形夹角为36度。计算出cos18°，sin18°备用\r\n           */\r\n          var w = Math.abs(x2 - x1),\r\n              h = Math.abs(y2 - y1),\r\n              r = Math.sqrt(w * w + h * h)\r\n          var cos18 = Math.cos(18 * Math.PI / 180)\r\n          var sin18 = Math.sin(18 * Math.PI / 180)\r\n          /**\r\n           * 算出对应五个点的坐标转化为路径\r\n           */\r\n          var point1 = [x1, y1 + r]\r\n          var point2 = [x1 + 2 * r * (sin18), y1 + r - 2 * r * (cos18)]\r\n          var point3 = [x1 - r * (cos18), y1 + r * (sin18)]\r\n          var point4 = [x1 + r * (cos18), y1 + r * (sin18)]\r\n          var point5 = [x1 - 2 * r * (sin18), y1 + r - 2 * r * (cos18)]\r\n          var path = \" M \" + point1[0] + \" \" + point1[1]\r\n          path += \" L \" + point2[0] + \" \" + point2[1]\r\n          path += \" L \" + point3[0] + \" \" + point3[1]\r\n          path += \" L \" + point4[0] + \" \" + point4[1]\r\n          path += \" L \" + point5[0] + \" \" + point5[1]\r\n          path += \" Z\";\r\n          canvasObject = new fabric.Path(path, {\r\n            stroke: this.color,\r\n            fill: this.color,\r\n            strokeWidth: this.drawWidth,\r\n            // angle:180,  //设置旋转角度\r\n          });\r\n          break;\r\n        case \"ellipse\": //椭圆\r\n          // 按shift时画正圆，只有在鼠标移动时才执行这个，所以按了shift但是没有拖动鼠标将不会画圆\r\n          if (e.e.shiftKey) {\r\n            mouseTo.x - left > mouseTo.y - top ? mouseTo.y = top + mouseTo.x - left : mouseTo.x = left + mouseTo.y - top\r\n          }\r\n          var radius =\r\n              Math.sqrt(\r\n                  (mouseTo.x - left) * (mouseTo.x - left) +\r\n                  (mouseTo.y - top) * (mouseTo.y - top)\r\n              ) / 2;\r\n          canvasObject = new fabric.Ellipse({\r\n            left: (mouseTo.x - left) / 2 + left,\r\n            top: (mouseTo.y - top) / 2 + top,\r\n            stroke: this.color,\r\n            fill: \"rgba(255, 255, 255, 0)\",\r\n            originX: \"center\",\r\n            originY: \"center\",\r\n            rx: Math.abs(left - mouseTo.x) / 2,\r\n            ry: Math.abs(top - mouseTo.y) / 2,\r\n            strokeWidth: this.drawWidth\r\n          });\r\n          break;\r\n        case \"rectangle\": //长方形\r\n          // 按shift时画正方型\r\n          if (e.e.shiftKey) {\r\n            mouseTo.x - left > mouseTo.y - top ? mouseTo.y = top + mouseTo.x - left : mouseTo.x = left + mouseTo.y - top\r\n          }\r\n          var path =\r\n              \"M \" +\r\n              mouseFrom.x +\r\n              \" \" +\r\n              mouseFrom.y +\r\n              \" L \" +\r\n              mouseTo.x +\r\n              \" \" +\r\n              mouseFrom.y +\r\n              \" L \" +\r\n              mouseTo.x +\r\n              \" \" +\r\n              mouseTo.y +\r\n              \" L \" +\r\n              mouseFrom.x +\r\n              \" \" +\r\n              mouseTo.y +\r\n              \" L \" +\r\n              mouseFrom.x +\r\n              \" \" +\r\n              mouseFrom.y +\r\n              \" z\";\r\n          canvasObject = new fabric.Path(path, {\r\n            left: left,\r\n            top: top,\r\n            stroke: this.color,\r\n            strokeWidth: this.drawWidth,\r\n            fill: \"rgba(255, 255, 255, 0)\",\r\n            hasControls: false\r\n          });\r\n          //也可以使用fabric.Rect\r\n          break;\r\n        case \"text\": //文本框\r\n          this.textbox = new fabric.Textbox(\"\", {\r\n            left: mouseFrom.x,\r\n            top: mouseFrom.y - 10,\r\n            // width: 150,\r\n            fontSize: 16,\r\n            borderColor: this.color,\r\n            fill: this.color,\r\n            hasControls: false\r\n          });\r\n          this.canvas.add(this.textbox);\r\n          this.textbox.enterEditing();\r\n          this.textbox.hiddenTextarea.focus();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      if (canvasObject) {\r\n        // canvasObject.index = getCanvasObjectIndex();\\\r\n        this.canvas.add(canvasObject); //.setActiveObject(canvasObject)\r\n        this.drawingObject = canvasObject;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.canvas = new fabric.Canvas(\"canvas\", {\r\n      // skipTargetFind: false, //当为真时，跳过目标检测。目标检测将返回始终未定义。点击选择将无效\r\n      // selectable: false,  //为false时，不能选择对象进行修改\r\n      // selection: false   // 是否可以多个对象为一组\r\n    });\r\n    this.canvas.selectionColor = \"rgba(0,0,0,0.05)\";\r\n    this.canvas.on(\"mouse:down\", this.mousedown);\r\n    this.canvas.on(\"mouse:move\", this.mousemove);\r\n    this.canvas.on(\"mouse:up\", this.mouseup);\r\n    document.onkeydown = e => {\r\n      // 键盘 delect删除所选元素\r\n      if (e.keyCode == 46) {\r\n        this.deleteObj();\r\n      }\r\n      // ctrl+z 删除最近添加的元素\r\n      if (e.keyCode == 90 && e.ctrlKey) {\r\n        this.canvas.remove(\r\n            this.canvas.getObjects()[this.canvas.getObjects().length - 1]\r\n        );\r\n      }\r\n    };\r\n    // var originalRender = fabric.Textbox.prototype._render;\r\n    // fabric.Textbox.prototype._render = function(ctx) {\r\n    //   originalRender.call(this, ctx);\r\n    //   //Don't draw border if it is active(selected/ editing mode)\r\n    //   if (this.active) return;\r\n    //   if(this.showTextBoxBorder){\r\n    //     var w = this.width,\r\n    //       h = this.height,\r\n    //       x = -this.width / 2,\r\n    //       y = -this.height / 2;\r\n    //     ctx.beginPath();\r\n    //     ctx.moveTo(x, y);\r\n    //     ctx.lineTo(x + w, y);\r\n    //     ctx.lineTo(x + w, y + h);\r\n    //     ctx.lineTo(x, y + h);\r\n    //     ctx.lineTo(x, y);\r\n    //     ctx.closePath();\r\n    //     var stroke = ctx.strokeStyle;\r\n    //     ctx.strokeStyle = this.textboxBorderColor;\r\n    //     ctx.stroke();\r\n    //     ctx.strokeStyle = stroke;\r\n    //   }\r\n    // }\r\n    // fabric.Textbox.prototype.cacheProperties = fabric.Textbox.prototype.cacheProperties.concat('active');\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.el-container {\r\n  flex-direction: column;\r\n}\r\nimg,\r\ninput {\r\n  display: none;\r\n}\r\n.demo {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\ncanvas {\r\n  border: 1px dashed black;\r\n}\r\n.draw-btn-group {\r\n  // width: 1270px;\r\n  margin-top: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  & > div {\r\n    background: #fafafa;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background: #eee;\r\n    }\r\n    i {\r\n      display: flex;\r\n      background-repeat: no-repeat;\r\n      background-size: 80%;\r\n      background-position: 50% 50%;\r\n      height: 30px;\r\n      width: 30px;\r\n    }\r\n    .icon-1 {\r\n      background-image: url(\"../assets/icons/draw/1.png\");\r\n    }\r\n    .icon-pentagram {\r\n      background-image: url(\"../assets/icons/draw/pentagram.png\");\r\n    }\r\n    .icon-2 {\r\n      background-image: url(\"../assets/icons/draw/2.png\");\r\n    }\r\n    .icon-3 {\r\n      background-image: url(\"../assets/icons/draw/3.png\");\r\n    }\r\n    .icon-4 {\r\n      background-image: url(\"../assets/icons/draw/4.png\");\r\n      background-size: 75%;\r\n    }\r\n    .icon-5 {\r\n      background-image: url(\"../assets/icons/draw/5.png\");\r\n      background-size: 70%;\r\n    }\r\n    .icon-6 {\r\n      background-image: url(\"../assets/icons/draw/6.png\");\r\n    }\r\n    .icon-7 {\r\n      background-image: url(\"../assets/icons/draw/7.png\");\r\n      background-size: 80%;\r\n    }\r\n    .icon-del {\r\n      background-image: url(\"../assets/icons/draw/del.png\");\r\n      background-size: 90%;\r\n    }\r\n    .icon-img {\r\n      background-image: url(\"../assets/icons/draw/img.png\");\r\n      background-size: 80%;\r\n    }\r\n    .icon-back {\r\n      background-image: url(\"../assets/icons/draw/back.png\");\r\n      background-size: 75%;\r\n    }\r\n    .icon-save {\r\n      background-image: url(\"../assets/icons/draw/save.png\");\r\n      background-size: 80%;\r\n    }\r\n    .icon-mouse {\r\n      background-image: url(\"../assets/icons/draw/mouse.png\");\r\n      background-size: 60%;\r\n    }\r\n  }\r\n  .active {\r\n    background: #eee;\r\n  }\r\n}\r\n</style>"]}]}