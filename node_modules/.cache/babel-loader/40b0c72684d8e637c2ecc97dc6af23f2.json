{"remainingRequest":"D:\\_codes\\MyProjects\\vuetestbs\\node_modules\\babel-loader\\lib\\index.js!D:\\_codes\\MyProjects\\vuetestbs\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\_codes\\MyProjects\\vuetestbs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\_codes\\MyProjects\\vuetestbs\\src\\views\\About.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\_codes\\MyProjects\\vuetestbs\\src\\views\\About.vue","mtime":1611646677585},{"path":"D:\\_codes\\MyProjects\\vuetestbs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\_codes\\MyProjects\\vuetestbs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\_codes\\MyProjects\\vuetestbs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\_codes\\MyProjects\\vuetestbs\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["About.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <b-navbar toggleable=\"lg\" type=\"dark\" variant=\"info\">\n      <b-navbar-brand href=\"#\">FabricDraw</b-navbar-brand>\n\n      <b-navbar-toggle target=\"nav-collapse\"></b-navbar-toggle>\n\n      <b-collapse id=\"nav-collapse\" is-nav>\n        <b-navbar-nav>\n          <b-button v-b-toggle.sidebar-variant size=\"sm\" class=\"my-2 my-sm-0\">Global Ope</b-button>\n        </b-navbar-nav>\n        <b-navbar-nav>\n          <b-button size=\"sm\" class=\"my-2 my-sm-0 mx-sm-2\" v-on:click=\"download()\">Download File</b-button>\n        </b-navbar-nav>\n        <b-navbar-nav>\n          <b-button size=\"sm\" class=\"my-2 my-sm-0 mx-sm-2\" v-on:click=\"exportNet()\">Export</b-button>\n        </b-navbar-nav>\n        <b-navbar-nav>\n          <b-form-file\n              v-model=\"netFile\"\n              :state=\"Boolean(netFile)\"\n              placeholder=\"Choose a file or drop it here...\"\n              drop-placeholder=\"Drop file here...\"\n              size=\"sm\"\n          ></b-form-file>\n        </b-navbar-nav>\n        <b-navbar-nav>\n          <b-button size=\"sm\" class=\"my-2 my-sm-0 mx-sm-2\" v-on:click=\"importNet()\">Import</b-button>\n        </b-navbar-nav>\n        <b-navbar-nav class=\"ml-auto\">\n          <b-nav-form>\n            <b-form-input size=\"sm\" class=\"mr-sm-2\" placeholder=\"Enter node label\" autocomplete=\"off\" v-model=\"searchNodeName\"></b-form-input>\n            <b-button size=\"sm\" class=\"my-2 my-sm-0\" v-on:click=\"searchNode()\" type=\"submit\">Search</b-button>\n          </b-nav-form>\n        </b-navbar-nav>\n      </b-collapse>\n    </b-navbar>\n    <b-sidebar id=\"sidebar-variant\" title=\"Global Ope\" bg-variant=\"light\" shadow>\n      <div class=\"px-3 py-2\">\n        <div class=\"my-2\">\n          <div v-b-toggle.collapse-1>\n            <b-icon icon=\"plus-circle-fill\" aria-hidden=\"true\"></b-icon>\n            Add Org\n          </div>\n          <b-collapse id=\"collapse-1\" variant=\"light\" class=\"mt-2\">\n            <b-card>\n              <b-row class=\"my-1\">\n                <b-form-input v-model=\"org.domain\" size=\"sm\" class=\"mr-sm-2\" placeholder=\"Enter base domain name\"></b-form-input>\n              </b-row>\n              <b-row class=\"my-1\">\n                <b-form-input v-model=\"org.name\" size=\"sm\" class=\"mr-sm-2\" placeholder=\"Enter org name\"></b-form-input>\n              </b-row>\n              <b-row class=\"my-1\">\n                <b-form-input v-model=\"org.firstPeerName\" size=\"sm\" class=\"mr-sm-2\" placeholder=\"Enter first peer name\"></b-form-input>\n              </b-row>\n              <b-row class=\"my-1\">\n                <b-button size=\"sm\" class=\"my-2 my-sm-0\" v-on:click=\"newOrg()\">Add</b-button>\n              </b-row>\n            </b-card>\n          </b-collapse>\n        </div>\n\n        <div class=\"my-2\">\n          <div v-b-toggle.collapse-2>\n            <b-icon icon=\"plus-circle-fill\" aria-hidden=\"true\"></b-icon>\n            Add Orderer\n          </div>\n          <b-collapse id=\"collapse-2\" variant=\"light\" class=\"mt-2\">\n            <b-card>\n              <b-row class=\"my-1\">\n                <b-form-input v-model=\"orderer.name\" size=\"sm\" class=\"mr-sm-2\" placeholder=\"Enter orderer name\"></b-form-input>\n              </b-row>\n              <b-row class=\"my-1\">\n                <b-button size=\"sm\" class=\"my-2 my-sm-0\" v-on:click=\"newOrderer()\">Add</b-button>\n              </b-row>\n            </b-card>\n          </b-collapse>\n        </div>\n      </div>\n    </b-sidebar>\n    <div id=\"visualization\" class=\"vis-container m-auto\"></div>\n    <b-collapse id=\"collapse-3\" v-model=\"visible\" class=\"my-2\">\n      <b-card>\n        <b-row class=\"my-1\">\n          <b-col md=\"1\" offset-md=\"1\">\n            Change Domain:\n          </b-col>\n          <b-col md=\"3\">\n            <b-form-input size=\"sm\" v-model=\"peer.domain\"></b-form-input>\n          </b-col>\n          <b-col md=\"1\">\n            <b-button size=\"sm\" class=\"my-2 my-sm-0\" v-on:click=\"changeDomain()\">Chnage</b-button>\n          </b-col>\n        </b-row>\n        <b-row class=\"my-1\" v-if=\"showAddPeer\">\n          <b-col md=\"1\" offset-md=\"1\">\n            New Peer:\n          </b-col>\n          <b-col md=\"3\">\n            <b-form-input size=\"sm\" v-model=\"peer.name\" placeholder=\"Enter peer name\"></b-form-input>\n          </b-col>\n          <b-col md=\"1\">\n            <b-button size=\"sm\" class=\"my-2 my-sm-0\" v-on:click=\"newPeer()\">Add</b-button>\n          </b-col>\n        </b-row>\n      </b-card>\n    </b-collapse>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'Vis',\n  data () {\n    return {\n      peerIndex: 4,\n      orgIndex: 2,\n      org: {\n        domain: \"test.com\",\n        name: \"\",\n        firstPeerName: \"\",\n        caName: \"ca\",\n      },\n      peer: {\n        domain: \"\",\n        name: \"\",\n        parentPeer: \"\",\n        orgIndex: \"\",\n      },\n      orderer: {\n        name: \"\",\n      },\n      orgs: {\n        0: {\n          domain: \"test.com\",\n          name: \"orderer\",\n          CAID: 0,\n          CAName: \"ca\",\n          peerName: {\n            1: \"orderer\",\n          },\n        },\n        1: {\n          domain: \"test.com\",\n          name: \"org1\",\n          CAID: 2,\n          CAName: \"ca\",\n          peerName: {\n            3: \"peer0\",\n          }\n        }\n      },\n      nodes: {},\n      edges: {},\n      visible: false,\n      showAddPeer: true,\n      searchNodeName: \"\",\n      netFile: null,\n    }\n  },\n  methods: {\n    newOrg() {\n      this.orgs[this.orgIndex] = {\n        domain: this.org.domain,\n        name: this.org.name,\n        CAID: this.peerIndex,\n        CAName: this.org.caName,\n        peerName: {}\n      }\n      this.nodes.add({\n        id: this.peerIndex,\n        label: this.org.caName + '.' + this.org.name + '.' + this.org.domain,\n        group: this.orgIndex,\n      })\n      this.peerIndex++\n      this.addPeer(this.orgIndex, this.org.firstPeerName, [this.peerIndex - 1, 1])\n      this.orgIndex++\n      this.org.name = \"\"\n      this.org.firstPeerName = \"\"\n    },\n    addPeer(org, name, parentPeers) {\n      this.orgs[org][\"peerName\"][this.peerIndex] = name\n      let peerLabel = \"\"\n      if (org != 0) {\n        peerLabel = name + '.' + this.orgs[org][\"name\"] + '.' + this.orgs[org][\"domain\"]\n      } else {\n        peerLabel = name + '.' + this.orgs[org][\"domain\"]\n      }\n\n      this.nodes.add({\n        id: this.peerIndex,\n        label: peerLabel,\n        group: org\n      })\n      for (let index = 0; index < parentPeers.length; index++) {\n        this.edges.add({from: this.peerIndex, to: parentPeers[index]})\n      }\n      this.peerIndex++\n    },\n    newPeer() {\n      this.addPeer(this.peer.orgIndex, this.peer.name, [this.peer.parentPeer])\n      this.peer['name'] = \"\"\n    },\n    newOrderer() {\n      this.addPeer(0, this.orderer.name, Object.keys(this.orgs[0][\"peerName\"]))\n      this.orderer['name'] = \"\"\n    },\n    changeDomain() {\n      this.orgs[this.peer.orgIndex][\"domain\"] = this.peer.domain\n      let peerID = Object.keys(this.orgs[this.peer.orgIndex][\"peerName\"])\n      if (this.peer.orgIndex == 0) {\n        this.nodes.updateOnly({\n          id: this.orgs[this.peer.orgIndex][\"CAID\"],\n          label: this.orgs[this.peer.orgIndex][\"CAName\"] + \".\" + this.peer.domain,\n        })\n        for (let index = 0; index < peerID.length; index++) {\n          this.nodes.updateOnly({\n            id: parseInt(peerID[index]),\n            label: this.orgs[this.peer.orgIndex][\"peerName\"][peerID[index]] + \".\" + this.peer.domain,\n          })\n        }\n      } else {\n        this.nodes.updateOnly({\n          id: this.orgs[this.peer.orgIndex][\"CAID\"],\n          label: this.orgs[this.peer.orgIndex][\"CAName\"] + \".\" + this.orgs[this.peer.orgIndex][\"name\"] + \".\" + this.peer.domain,\n        })\n        for (let index = 0; index < peerID.length; index++) {\n          this.nodes.updateOnly({\n            id: parseInt(peerID[index]),\n            label: this.orgs[this.peer.orgIndex][\"peerName\"][peerID[index]] + \".\" + this.orgs[this.peer.orgIndex][\"name\"] + \".\" + this.peer.domain,\n          })\n        }\n      }\n    },\n    selectShow(that, nodeID) {\n      if (that.orgs[that.nodes.get(nodeID)['group']][\"CAID\"] != nodeID) {\n        that.visible = true\n        that.showAddPeer = true\n        that.peer.parentPeer = nodeID\n        that.peer.orgIndex = that.nodes.get(nodeID)['group']\n        that.peer.domain = that.orgs[that.peer.orgIndex][\"domain\"]\n        if (that.nodes.get(nodeID)['group'] == 0) {\n          that.showAddPeer = false\n        }\n      }\n      else {\n        that.visible = false\n      }\n    },\n    download() {\n      let that = this\n      this.$axios({\n        method: 'POST',\n        url: '/download',\n        data: {\n          jsonContent: JSON.stringify(that.orgs),\n        },\n        responseType: 'blob'\n      })\n          .then(response => {\n            let link = document.createElement(\"a\")\n            link.href = window.URL.createObjectURL(new Blob([response.data]))\n            link.target = \"_blank\"\n            link.download = \"fabricDraw.zip\"\n            document.body.appendChild(link)\n            link.click()\n            document.body.removeChild(link)\n          })\n    },\n    searchNode() {\n      let that = this\n      let items = this.nodes.get({\n        filter: function (item) {\n          return item.label == that.searchNodeName;\n        }\n      })\n      if (items.length == 0) {\n        return\n      }\n      this.network.selectNodes([items[0]['id']])\n      that.selectShow(this, items[0]['id'])\n    },\n    exportNet() {\n      let data = {\n        orgs: this.orgs,\n        nodes: this.nodes.get(),\n        edges: this.edges.get(),\n      }\n      data = JSON.stringify(data)\n      let link = document.createElement(\"a\")\n      link.href = window.URL.createObjectURL(new Blob([data], { type: \"text/json\" }))\n      link.target = \"_blank\"\n      link.download = \"netjson.json\"\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n      console.log(this.nodes.get())\n    },\n    importNet() {\n      let that = this\n      var reader = new FileReader()\n      reader.readAsText(this.netFile)\n      reader.onload = function (evt) {\n        var fileString = evt.target.result\n        let netData = JSON.parse(fileString)\n        that.orgs = netData[\"orgs\"]\n        that.nodes.clear()\n        that.edges.clear()\n        that.nodes.add(netData[\"nodes\"])\n        that.edges.add(netData[\"edges\"])\n        console.log(netData[\"orgs\"])\n      }\n    },\n    create () {\n      let visnetwork = this.$visnetwork\n      let visdata = this.$visdata\n      this.nodes = new visdata.DataSet([\n        {\n          id: 0,\n          label: \"ca.test.com\",\n          group: 0,\n        },\n        {\n          id: 1,\n          label: \"orderer.test.com\",\n          group: 0,\n        },\n        {\n          id: 2,\n          label: \"ca.org1.test.com\",\n          group: 1,\n        },\n        {\n          id: 3,\n          label: \"peer0.org1.test.com\",\n          group: 1,\n        },\n      ])\n      this.edges = new visdata.DataSet([\n        {\n          from: 1,\n          to: 0,\n        },\n        {\n          from: 3,\n          to: 2,\n        },\n        {\n          from: 3,\n          to: 1,\n        },\n      ])\n      var container = document.querySelector('#visualization')\n      var data = {\n        nodes: this.nodes,\n        edges: this.edges\n      }\n      var options = {\n        nodes: {\n          shape: \"dot\",\n          size: 16,\n          font: {\n            size: 16,\n          },\n          borderWidth: 2,\n          shadow: true,\n        },\n        edges: {\n          width: 2,\n          shadow: true,\n        },\n      }\n      this.network = new visnetwork.Network(container, data, options)\n      const that = this\n      this.network.on(\"click\", function (params) {\n        if(params.nodes.length == 0) {\n          that.visible = false\n        }\n      })\n      this.network.on(\"selectNode\", function (params) {\n        that.selectShow(that, params.nodes[0])\n      })\n    }\n  },\n  mounted () {\n    this.create()\n  }\n}\n</script>\n\n<style scoped>\n.vis-container {\n  width: 960px;\n  height: 540px;\n}\n\n</style>\n"],"sourceRoot":"src/views"}]}